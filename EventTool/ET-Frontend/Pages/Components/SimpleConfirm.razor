<div style="
    position: fixed;
    top: 0; left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2000;">

    <MudPaper Class="p-4" Style="width: 300px; border-radius: 8px;">
        <MudText Typo="Typo.body1">@Message</MudText>
        <MudDivider Class="my-2" />
        <div class="d-flex justify-content-center mt-4 mb-1" style="gap: 1.2rem;">
            <MudButton Variant="Variant.Outlined"
                       Class="px-3 py-1"
                       Style="font-weight: 600; letter-spacing: 0.3px; min-width: 100px; border-color: #BDBDBD; color: #333;"
                       Color="Color.Default"
                       OnClick="@(() => Confirm(false))">
                ABBRECHEN
            </MudButton>

            <MudButton Variant="Variant.Filled"
                       Color="Color.Error"
                       Class="px-3 py-1"
                       Style="font-weight: 600; letter-spacing: 0.3px; min-width: 100px; border-radius: 6px;"
                       OnClick="@(() => Confirm(true))">
                @ConfirmText
            </MudButton>
        </div>
    </MudPaper>
</div>

@code {
    [Parameter] public string Message { get; set; }
    [Parameter] public string ConfirmText { get; set; } = "Fortfahren";
    [Parameter] public EventCallback<bool> OnConfirm { get; set; }

    private void Confirm(bool result)
    {
        OnConfirm.InvokeAsync(result);
    }
}