@namespace ET_Frontend.Components
@using ET_Frontend.Models.Enums

<MudDialog>
    <TitleContent>
        Status ändern
    </TitleContent>
    <DialogContent>
        <MudContainer>
            <MudText Typo="Typo.body1">Wählen Sie aus, in welchen Zustand bei Aktivierung gewechselt werden soll. Aktuell ausgewählter Status: <strong>@activeStateText</strong></MudText>
            <MudContainer Class="d-flex flex-row justify-center pt-4">
                <MudContainer Class="d-flex flex-row justify-center">
                    <MudButton Class="m-1" Color="Color.Primary" Variant="Variant.Filled" OnClick="@( () => changeActiveState(EventStates.Open))">Offen</MudButton>
                    <MudButton Class="m-1" Color="Color.Primary" Variant="Variant.Filled" OnClick="@( () => changeActiveState(EventStates.Closed))">Geschlossen</MudButton>
                    <MudButton Class="m-1" Color="Color.Primary" Variant="Variant.Filled" OnClick="@( () => changeActiveState(EventStates.Canceled))">Abgesagt</MudButton>
                    <MudButton Class="m-1" Color="Color.Primary" Variant="Variant.Filled" OnClick="@( () => changeActiveState(EventStates.Archived))">Archiviert</MudButton>
                </MudContainer>
            </MudContainer>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Abbrechen</MudButton>
        <MudButton Color="Color.Primary" OnClick="SaveProcessStepChanges">Speichern</MudButton>
    </DialogActions>
</MudDialog>
@code {
    private String activeStateText = "Nicht gesetzt"; //TODO hier und bei EMail richtige Werte
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    private void changeActiveState(EventStates state)
    {
        switch (state)
        {
            case EventStates.Open:
                activeStateText = "Offen.";
                break;
            case EventStates.Closed:
                activeStateText = "Geschlossen.";
                break;
            case EventStates.Canceled:
                activeStateText = "Abgesagt.";
                break;
            case EventStates.Archived:
                activeStateText = "Archiviert.";
                break;
            default:
                activeStateText = "Unbekannter Status.";
                break;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        //TODO aktuellen Event status holen
    }

    private async Task SaveProcessStepChanges()
    {
        //TODO in DTO packen und speichern

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();
}