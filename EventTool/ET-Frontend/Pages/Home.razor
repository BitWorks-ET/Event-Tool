@page "/"

@inject NavigationManager Navigation


<PageTitle>Home</PageTitle>

<div class="flex-md-column align-content-between justify-content-center w-100 h-100">
    <div class="d-flex align-items-center justify-content-between p-4 bg-light">
        <div class="d-flex align-content-center">
            <MudPaper Class="d-flex align-items-center mr-3" Elevation="0">
                <img src="images/BitWorksSimpel-Gro.png" alt="BitWorks Logo" width="55" height="55" />
            </MudPaper>
            <div class="d-flex display-6 align-items-center">
                <p class="m-0">@organisationName</p>
            </div>
        </div>
        <div class="d-flex align-content-center justify-content-end w-25">
            <MudAvatar Color="Color.Primary" Size="Size.Medium">U</MudAvatar>
        </div>
    </div>

    <div class="flex-md-column align-content-between justify-content-center w-100 h-100">
        <MudPaper Width="100%" Height="100%">
            <MudTabs class="h-100" Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6 h-100">
                <NavLink href="/Login" class="btn-primary">
                    Login
                </NavLink>
                <MudTabPanel Text="Events">
                    <MudText Typo="Typo.h4" Class="mb-3">Events</MudText>
                    <MudDataGrid Items="@Elements.Take(4)">
                        <Columns>
                            <PropertyColumn Property="x => x.name" Title="Name" />
                            <PropertyColumn Property="x => x.description" Title="Beschreibung" />
                            <PropertyColumn Property="x => x.registeredUsers" Title="Teilnehmer" />
                            <PropertyColumn Property="x => x.maxUsers" Title="Maximale Teilnehmer" />
                            <TemplateColumn CellClass="d-flex justify-end">
                                <CellTemplate>
                                    <MudStack Row>
                                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Anmelden</MudButton>
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                    </MudDataGrid>

                </MudTabPanel>
                <MudTabPanel Text="Organisation">
                    <MudText Typo="Typo.h4" Class="mb-3">Mitglieder</MudText>



                    <MudDataGrid T="Mitglied" Items="@Mitglieder" Dense="true">
                        <Columns>
                            <PropertyColumn Property="x => x.LastName" Title="Nachname" />
                            <PropertyColumn Property="x => x.Email" Title="E-Mail" />



                            <TemplateColumn Title="Rolle">
                                <CellTemplate Context="ctx">
                                    <MudSelect T="Role"
                                               Dense="true"
                                               @bind-Value="ctx.Item.Role">
                                        <MudSelectItem Value="Role.Owner">Owner</MudSelectItem>
                                        <MudSelectItem Value="Role.Mitglied">Mitglied</MudSelectItem>
                                        <MudSelectItem Value="Role.Organisator">Organisator</MudSelectItem>
                                    </MudSelect>

                                </CellTemplate>
                            </TemplateColumn>


                            <TemplateColumn Title="">
                                <CellTemplate Context="ctx">
                                    <MudButton Variant="Variant.Filled"
                                               Color="Color.Error"
                                               Size="Size.Small"
                                               OnClick="@(() => EntferneMitglied(ctx.Item))">
                                        Entfernen
                                    </MudButton>
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                    </MudDataGrid>

                </MudTabPanel>

                <MudTabPanel Text="Vorlagen">
                    <MudText>Events</MudText>
                    <MudText>Prozesse</MudText>
                    <MudText>Prozessschritte</MudText>
                </MudTabPanel>
                <MudTabPanel Text="Vorlagen">
                    <MudText>Events</MudText>
                    <MudText>Prozesse</MudText>
                    <MudText>Prozessschritte</MudText>
                </MudTabPanel>
            </MudTabs>
        </MudPaper>
    </div>
</div>



@code{
    public string organisationName = "test Orga"; // nur für erste Darstellung
    public record Event(string name, string description, int registeredUsers, int maxUsers);
    public enum Role { Owner, Mitglied, Organisator }

    
    public class Mitglied
    {
        public Role Role { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }

        public Mitglied() { }

        public Mitglied(string lastName, string email, Role role)
        {
            LastName = lastName;
            Email = email;
            Role = role;
        }
    }


    private IEnumerable<Event> Elements;
    private List<Mitglied> Mitglieder;


    protected override async Task OnInitializedAsync()
    {
        Elements = new List<Event>
        {
            new Event("Grillfest", "lecker!", 5, 10),
            new Event("Sommerfest", "heiß!", 40, 150)
        };

        Mitglieder = new List<Mitglied>
        {
        new Mitglied("Reich", "Reich@example.com", Role.Owner),
        new Mitglied("Jonas", "Jonas@example.com", Role.Organisator),
        new Mitglied("Müller", "mueller@example.com", Role.Mitglied)
        };
    
    }

    private Task UpdateRolle(Mitglied mitglied, Role neueRolle)
    {
        mitglied.Role = neueRolle;
        StateHasChanged();
        return Task.CompletedTask;
    }




    private void EntferneMitglied(Mitglied mitglied)
    {
        Mitglieder.Remove(mitglied);
    }
}
